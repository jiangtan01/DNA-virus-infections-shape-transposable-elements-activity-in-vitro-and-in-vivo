#############this scripts used for the singele cell RNAseq data of virus related cancer patients TE analysis#################

#############MCV patients TE analysis##############
############# mapping to hg38 by snakepipes#############
cd /path/to/data/ && module load snakePipes/2.7.2
scRNAseq -j 20 -i /path/to/data/ -o snakepipes.out --myKit 10Xv3 --STARsoloCoords 1,16,17,12 hg38  

########################################
#########scTE analysis MCV patient #####
########################################

############down load the package scTE and run using the bam file from up#########
###########follow the manual fo scET to setup all the files including hg38.exclusive.idx###############

cd /path/to/data/ && conda activate scTE

############start all #########
for i in /path/to/output/*subset.bam; do j=`echo $i |rev |cut -d "/" -f1 |rev`; SlurmEasy -t 20 -m 9635 "scTE -i $i -o $j -x scTE/hg38.exclusive.idx -p 20 --hdf5 True -CB CB -UMI UB"; done


#############################################
#############seurat analysis ################
#############################################
prewd="path/to/sc_MCV_patient/scTE"

library(dplyr)
library(Seurat)
library(data.table)
library(foreach)
library(GenomicRanges)
library(doParallel)
library(ggpubr)
library(gridExtra)
library(Signac)
library(SeuratWrappers)
library(monocle3)
library(cicero)
library(Matrix)
library(ggplot2)
library(patchwork)
library(future)
library(stringr)
library(DESeq2)
library(rtracklayer)
library(SeuratDisk)

###convert h5ad to seurat file########
file_list <- list.files(path = "path/to/sc_MCV_patient/scTE", pattern = "*.h5ad", full.names = T)

for (f in file_list)
{
  Convert(source=f, assay="RNA", dest = "h5seurat", overwrite = TRUE, verbose=FALSE)
}

# Load the retransfer seurat file and create a Seurat object
p1_object <- LoadH5Seurat("path/to/sc_MCV_patient/scTE/p1.h5seurat", verbose=FALSE)
p1_object <- as.matrix(GetAssayData(p1_object))
p1_object = CreateSeuratObject(counts = p1_object)

p3_object <- LoadH5Seurat("path/to/HSV1/sc_MCV_patient/scTE/p3.h5seurat", verbose=FALSE)
p3_object <- as.matrix(GetAssayData(p3_object))
p3_object = CreateSeuratObject(counts = p3_object)

p2_object <- LoadH5Seurat("path/to/HSV1/sc_MCV_patient/scTE/p2.h5seurat", verbose=FALSE)
p2_object <- as.matrix(GetAssayData(p2_object))
p2_object = CreateSeuratObject(counts = p2_object)

p6_object <- LoadH5Seurat("path/to/HSV1/sc_MCV_patient/scTE/p6.h5seurat", verbose=FALSE)
p6_object <- as.matrix(GetAssayData(p6_object))
p6_object = CreateSeuratObject(counts = p6_object)

p4_object <- LoadH5Seurat("path/to/HSV1/sc_MCV_patient/scTE/p4.h5seurat", verbose=FALSE)
p4_object <- as.matrix(GetAssayData(p4_object))
p4_object = CreateSeuratObject(counts = p4_object)

p5_object <- LoadH5Seurat("path/to/HSV1/sc_MCV_patient/scTE/p5.h5seurat", verbose=FALSE)
p5_object <- as.matrix(GetAssayData(p5_object))
p5_object = CreateSeuratObject(counts = p5_object)

All_merged_object <- merge(p1_object, y = c(p2_object,p3_object,p4_object,p5_object,p6_object), add.cell.ids = c("p1","p2","p3","p4","p5","p6"), project = "pos")
All_merged_object[["percent.mt"]] <- PercentageFeatureSet(All_merged_object, pattern = "^MT-")
VlnPlot(All_merged_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
all.objects.merge <- subset(all.objects.merge, subset = nFeature_RNA > 200 & nFeature_RNA < 12000 & percent.mt < 25)

All_merged_object <- NormalizeData(All_merged_object, normalization.method = "LogNormalize", scale.factor = 10000)
All_merged_object <- FindVariableFeatures(All_merged_object, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(All_merged_object), 10)

plot1 <- VariableFeaturePlot(All_merged_object)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot1 + plot2
all.genes <- rownames(All_merged_object)
All_merged_object <- ScaleData(All_merged_object, features = all.genes)

All_merged_object <- RunPCA(All_merged_object, features = VariableFeatures(object = All_merged_object))
DimHeatmap(All_merged_object, dims = 1:5, cells = 500, balanced = TRUE)

All_merged_object <- JackStraw(All_merged_object, num.replicate = 100)
All_merged_object <- ScoreJackStraw(All_merged_object, dims = 1:20)
All_merged_object <- FindNeighbors(All_merged_object, dims = 1:10)
All_merged_object <- FindClusters(All_merged_object, resolution = 0.1)
All_merged_object <- RunUMAP(All_merged_object, dims = 1:10)

##############make the plot for the TE interesting##############
All_merged_object$MLTs= rowSums(FetchData(object = All_merged_object, vars = c("MLT1A","MLT1A0","MLT1B","MLT1D","MLT1E1A","MLT1F2", "MLT2A1", "MLT2A2","MLT1F1","MLT1K","MLT1L","MLT1E1","MLT1O","MLT1N2","MLT1C","MLT2B2","MLT1H2","MLT1E2","MLT1E3","MLT1I","MLT1J","MLT1J2","MLT2B3")))
p1=FeaturePlot(All_merged_object, features = c("MLTs"), order=TRUE, pt.size = 0.1,reduction="umap", max.cutoff=30, keep.scale = "all")+ scale_color_gradientn(colors = c("#dddddd","#dddddd","#dddddd","#dddddd","#dddddd","#dddddd","#dddddd","#FF9B9B","#fd3a69","#fd3a69"))
ggsave(plot = p1, filename = file.path(prewd, "Output", paste0("pos_MLTs.pdf")), dpi = 300, width=4.5,height =3, useDingbats = TRUE)

All_merged_object$THEs= rowSums(FetchData(object = All_merged_object, vars = c("THE1A","THE1B","THE1C","THE1D")))
p1=FeaturePlot(All_merged_object, features = c("THEs"), order=TRUE, pt.size = 0.1,reduction="umap", max.cutoff=8, keep.scale = "all")+ scale_color_gradientn(colors = c("#dddddd","#dddddd","#dddddd","#dddddd","#dddddd","#dddddd","#dddddd","#dddddd","#FF9B9B","#fd3a69","#fd3a69"))
ggsave(plot = p1, filename = file.path(prewd, "Output", paste0("pos_THEs.pdf")), dpi = 300, width=4.5,height =3, useDingbats = TRUE)


########patient dot vln plot##########
MLTs <-c("MLT1A","MLT1A0","MLT1B","MLT1D","MLT1E1A","MLT1F2", "MLT2A1", "MLT2A2","MLT1F1","MLT1K","MLT1L","MLT1E1","MLT1O","MLT1N2","MLT1C","MLT2B2","MLT1H2","MLT1E2","MLT1E3","MLT1I","MLT1J","MLT1J2","MLT2B3")
THEs <- c("THE1A","THE1B","THE1C","THE1D")
list = c("MLTs","THEs")

p1=DotPlot(All_merged_object, features = list) + RotatedAxis()
ggsave(plot = p1, filename = file.path(prewd, "Output", paste0("dot.pdf")), dpi = 600, width=5,height =5, useDingbats = TRUE)


######VlnPlot########
my_comparisons <- list( c("Astrocyte", "Neurons"), c("T cells", "Neurons"), c("B cells", "Neurons"), c("Endothelial", "Neurons"), c("Monocyte", "Neurons"))
p1=VlnPlot(All_merged_object, features = "MLTs") + RotatedAxis()+ theme(legend.position = 'none')+  stat_compare_means(comparisons = my_comparisons, label = "p.signif",label.y = c(50,54,58,62,66,72))+ylim(0,73)
ggsave(plot = p1, filename = file.path(prewd, "Output", paste0("MLTs_vln.pdf")), dpi = 600, width=5,height =5, useDingbats = TRUE)
p1=VlnPlot(All_merged_object, features = "THEs") + RotatedAxis() + theme(legend.position = 'none')+  stat_compare_means(comparisons = my_comparisons, label = "p.signif",label.y = c(13,14,15,16,17,18))+ylim(0,18)
ggsave(plot = p1, filename = file.path(prewd, "Output", paste0("THEs_vln.pdf")), dpi = 600, width=5,height =5, useDingbats = TRUE)


#########heatmap############  
prewd="/path/to/sc_MCV_patient/"

############MLT and THE list##############
p1 = DoHeatmap(all.objects.merge,size = 5.5,
               hjust = 0,
               group.by = "ident",
               group.bar = TRUE,
               angle = 45,
               raster = TRUE,
               draw.lines = TRUE,
               lines.width = 15,
               group.bar.height = 0.02,
               disp.min = 0,
               disp.max = 3,
               combine = TRUE, features = all_HSV1_8hpi$symbol)+ scale_fill_gradientn(colors = c("#0174BE","white","#FF597B"))


ggsave(plot = p1, filename = file.path(prewd, "Output", paste0("TE_heatmap",".png")), dpi = 300, width=12,height =8, useDingbats = TRUE)



########## the EBV and HPV patient data did in a same way#############
